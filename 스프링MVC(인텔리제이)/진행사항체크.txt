향후공부할것 
  UML (자바 클래스 다이어그램 표현방식) 을 현업에서는 많이 사용하는가?


  DBA 가 되기위한 방법을 알아볼까 
       : Amazon Redshift / PostgreSQL

 * linux 환경 서버 이중화? 안성성? 백업 등? mysql 등 안정화,이중화
   -> 
   (http://blog.cafe24.com/1285)
   1. Mysql Replication 

    가장 많이 사용하는 방법으로 2대 이상의 Mysql 서버만 있으면 별도의 패키지나 장비없이 구축이 가능합니다.
    Mysql Replication은 1대의 Master 서버와 1대 또는 여러대의 slave 서버로 구성되며, Master 서버에 데이터가 기록되면 Slaver 서버가 Master 서버의 로그를 읽어서 데이터를 업데이트 하는 방식입니다. 이 경우 Master 서버에만 데이터를 기록하고 나머지 Slaver 서버들은 Master 서버를 통해서 데이터가 업데이트 되기 때문에 읽기만 가능합니다. 


    Master 서버에 장애 발생 시 3대의 Slaver 서버들 가운데 1대가 데이터를 넘겨받은 후 서비스에 투입되어 바로 복구가 이뤄집니다. 또한 데이터를 읽고 쓰는데 Master 서버에 부하가 많이 걸리면 Slaver 서버를 이용해 ‘Master 서버에 쓰고 Slaver 서버로 읽는’ 식으로 부하를 분산할 수 있습니다.

   2. DRBD + HeartBeat

    DRBD(Distributed Replicated Block Device)는 네트워크상에서 양쪽 서버에 동일한 데이터를 미러링하여 저장하는 ‘데이터 동기화’ 기능을 말합니다. 쉽게 말해 네트워크상에서 동작하는 RAID Level 1 (동일한 데이터를 미러링하여 두개의 디스크에 각각 저장하여 보관하는 방식) 이라고 생각하시면 됩니다.
    HeartBeat는 서버의 health check를 진행하여 Master 서버가 다운되거나 서비스에 이상이 있을 경우 Slave 서버로 자동으로 서비스를 옮겨주는 ‘서비스 이중화’ 기능을 말합니다.
    평상시 DRBD를 통해 데이터를 동기화하고 HeartBeat로 Master 서버가 다운되거나 서비스에 이상이 있는지 체크해서 이상이 있을 경우 자동으로 서비스가 Slave 서버로 넘겨가도록 합니다.
    Mysql Replication은 자동으로 서비스를 가져오는 기능이 없는 반면, DRBD + HeartBeat는 자동으로 서비스를 가져올 수 있다는 게 차이점이라고 할 수 있습니다. 









 * Mysql 
  .UDF의 사용 
  MySQL은 스토어드 프로시져 같은 개념이 존재 하지 않습니다.
  그대신 C 언어로 만든 함수를 사용할 수 있습니다.

  조금더 빠른 쿼리를 원한다면 UDF 를 사용해보세요 !

 * JPA에서 복잡한쿼리처리방식(조인이 많은경우) -> 성능상문제?
   -> jpa native 쿼리
해야될일
  

  * 로그인권한을 SPring Security 로 처리해보자  별도로그인화면 만들어서
  * 비밀번호 암호화까지 하자
  * jpa 연동 날짜 mysql 
  * 개인정보수정후 수정되었습니다라는 INfo 메세지?   
  
  * 로그인 화면의 remember me 쿠키처리
  * 마이바티스 트랜젝션체크 Repository인터페이스만가지고 해보자.
  
  * Result 클래스 별도로 빼서 권한체크스 에러메세지 반환하도록
 
  * 마이바티스의 쿼리 xml 을 xml로 하지말고해보자
 
  * 마이바티스 설정을 xml 말고 어노테이션으로 , dbcp 사용으로 변경3
  
  
  
  

해결한일
  * 로그인권한을 SPring Security 로 처리해보자  테스트완료 
  * heidisql >> mysql 쿼리분석기  쓸만하네
  * 인텔리제이에서 스프링부트 jsp 설정완료 터미널에서 mvnw spring-boot:run 으로 직적실행하면 작동을한다. 
     Run/Debuger 설정(실행버튼의 톰캣설정같은것) 에서 Run maven 에 spring-boot:run 을 하며됨
     이것고다는 터미널에서 직접실행하는게 더 좋음
  * 마이바티스 관련사이트 http://www.mybatis.org/mybatis-3/ko/sqlmap-xml.html
  * 인텔리제이에서 NEW 로 파일 중 특정 템플릿불러오는방법 ->java클래스선택하고 이름입력하고 아래 선택하면되느것을 ㅡ,.ㅡ
  * 내정보수정화면구성 마이바티스의 동적쿼리로  <set> 구문사용하여 동적쿼리구성하여 업데이트문구성
  * Repository 인터페이스만가지고 해보자 구현체없어도 마이바티스 인식하는지 체크 -> 이렇게 많이사용한다고한다.
     :  최종 Repository (DAO)에서는 인터페이스만구현하고 Service단에서 SqlSession 을 호출하여 처리
  * 로그인실패시 로그인화면으로 전환( 페이지내에 실패 이유표기)
  * 로그인처리 , 화면 메뉴권한 처리완료
  * 빠른 생산성을 위해서 재기동 없이 톰캣 Hot swapping 을 스프링부트처럼 할수있게
    스프링로더 jar 파일을 아래링크에서다운(최신버전은알아서판단 )
       http://mvnrepository.com/artifact/org.springframework/springloaded/1.2.4.RELEASE
    인텔리제이의경우 톰캣설정에서 vm 옵션 에 
     >>> -javaagent:C:/javaDev/Springloaded/springloaded-1.2.8.RELEASE.jar   -noverify  <<<< 이렇게추가하고
      On Update action 과 On frame deactivation 을 -> update classes and resources 로 바꾸어준다.
  

  * 부트스트랩적용 하고 /상대경로 맞추어서 header,menu,footer 분리하기
      <link rel="stylesheet" href="<c:url value="/resources/bootstrap-3.3.2/css/bootstrap.min.css" />" >
      위와같이 jstl 사용하여 절대경로의 css 위치를 잡았다.
  * mysql 연결 mybatis
  * pom 파일 기존에 연습했던 spring 4.x 대로 바꾸자
  * MVC 프로젝트 STS에서 생성후 인텔리J에서 추가모듈로 Import 및 톰캐세팅
  * 한글처리 
  * git 에 원격저장 -> git bash 에서 git init 등 커맨드로 일단 등록후 소스트리에서 하는게편함
  * 인텔리제이에서 log4j 인식못하는부분 해결
      - resource 폴더 프로젝트스트럭쳐 메뉴에서 resource 로선택
      - log4j.xml 상단에 URI 부분에 커서를 놓고 alt + Enter - Manually Setup External Resource 선택
        하면 현재 프로젝트에 포함된 라이브러리들 목록이 뜬다. log4j-1.2.8.jar 하위의 log4j.dtd
         를 찾아서 지정해준다.
  * 인텔리제이에서 mybatis mapper xml 인식못하는경우 pom.xml 의 build 태그안에 아래를 추가한다.
   : 원인은 인텔리제이에서 빌드시 xml 을 인식못함
    <resources>
        <resource>
          <directory>src/main/java</directory>
          <includes>
            <include>**/*.xml</include>
          </includes>
        </resource>
      </resources>
  * 쿼리로그를 이쁘게보기위해 log4j말고
     log4jdbc-remix 를 사용 
     http://addio3305.tistory.com/66
